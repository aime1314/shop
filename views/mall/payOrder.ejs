<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="referrer" content="no-referrer"/>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/base.css">
    <link rel="stylesheet" href="/stylesheets/order.css">
    <script src="/javascripts/phone.js"></script>
    <style>
    	.dist_way{
    		padding: 24px 24px;
    		background: #FFFFFF;
    		border-bottom: 1px solid #f7f6f9;
    		display: flex;
    		align-items: center;
    		justify-content: space-between;
    	}
    	.tui-checkbox.checked {
			background:#FF6A29
		}
		.tui-checkbox {
			width:34px;
			height:34px;
			background-color:#ffffff;
			border:solid 1px #dddddd;
			-webkit-border-radius:50%;
			border-radius:50%;
			margin-left:14px;
			font-size:0.8rem;
			position:relative;
			display:inline-block;
			vertical-align:top;
			cursor:default;
			-webkit-appearance:none;
			-webkit-user-select:none;
			user-select:none;
			-webkit-transition:background-color ease 0.1s;
			transition:background-color ease 0.1s;
		}
		.tui-checkbox.checked::after {
			content:'';
			top:8px;
			left:7px;
			position:absolute;
			background:transparent;
			border:#fff solid 2px;
			border-top:none;
			border-right:none;
			height:8px;
			width:16px;
			-moz-transform:rotate(-45deg);
			-ms-transform:rotate(-45deg);
			-webkit-transform:rotate(-45deg);
			transform:rotate(-45deg);
		}
    	.detail_address{
			padding: 24px 24px;
			background: #FFFFFF;
			display: flex;
			align-items: center;
			justify-content: space-between;
    		border-bottom: 1px solid #f7f6f9;
		}
		.address_img{
			width: 45px;
			height: 45px;
		}
		.detail_info{
			width: 92%;
			margin-left: 16px;
		}
		.addr_null{
			font-size: 26px;
			font-weight: 700;
			color: #2C2C2C;
		}
		.detail_name{
			width: 100%;
			font-size: 26px;
			font-weight: 700;
			color: #2C2C2C;
		}
		.detail_name span{
			padding-left: 24px;
		}
		.detail_addr{
			margin-top: 12px;
			line-height: 36px;
			font-size: 26px;
			color: #2C2C2C;
		}
		.detail_addr img{
			margin-left: 17px;
			width: 36px;
			height: 36px;
		}
		.detail_info2{
			flex-shrink: 1;
			margin-left: 0px;
		}
		.pay_addr_num{
			flex-shrink: 0;
			padding-left: 40px;
			padding-right: 10px;
			font-size: 24px;
			color: #6A6C72;
		}
		.pay_addr{
        	font-size: 28px;
        	color: #2C2C2C;
        	height: 72px;
        	line-height: 36px;
        	display: -webkit-box;
			-webkit-box-orient: vertical;
			-webkit-line-clamp: 2;
			overflow: hidden;
        }
        .pay_addr span{
        	font-weight: bold;
        }
        .pay_tel{
        	margin-top: 15px;	
        	font-size: 26px;
        	color: #AFAFB2;
        	display: flex;
        	justify-content: space-between;
        }
        .ext_n{
        	font-size: 24px;
        }
		.pay_inf_box{
			width: 84%;
			margin-left: 15px;
		}
		.pay_pic{
			width: 96px;
			height: 96px;
		}
		.pay_dedu{
			padding: 0px 17px;
			height: 46px;
			background: #F7F7F7;
			border-radius: 30px;
			display: inline-flex;
			align-items: center;
			flex-shrink: 0;
			font-size: 23px;
			color: #A5A8B2;
		}
		.comm_num_box{
			width: 240px;
			word-break: break-word;
		}
		.pay_orage{
			font-size: 23px;
			color: #FF6612;
		}
		.pay_dedu img{
			margin-left: 5px;
			width: 16px;
			height: 16px;
		}
		.comm_box{
			margin-top: 0px;
		}
		.detail_price{
			padding-bottom: 30px;
			border-bottom: 1px solid #F5F7F9;
		}
		.detail_price span{
			font-size: 28px;
		}

		.detail_price .money{
			display: inline-block;
			font-size: 33px;
		}
		.detail_price .money span{
			font-size: 26px;
		}
		.create_category {
            padding: 0px 25px;
            height: 96px;
            line-height: 96px;
            background: #ffffff;
            border-bottom: 1px solid #F5F7F9;
            display: flex;
            justify-content: space-between;
        }

        .category {
            font-size: 28px;
            color: #2C2C2C;
            flex-grow: 1;
            flex-shrink: 0;
        }

        .category_tit {
            text-align: right;
            min-width: 62%;
            padding: 0px 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            flex-grow: 2;
            flex-shrink: 1;
        }
        .category_tit2 {
            text-align: left;
            min-width: 71%;
            padding: 0px 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            flex-grow: 2;
            flex-shrink: 1;
        }

        .category_img {
            padding: 32px 0;
            flex-grow: 0.3;
            flex-shrink: 0;
        }

        .create_category img {
            float: right;
            width: 28px;
            height: 28px;
        }
		.pay_note{
			padding: 20px 24px;
			line-height: 40px;
			font-size: 28px;
			color: #2C2C2C;
			display: flex;
		}
		.pay_note span{
			color: #B0B1B6;
		}
		.pay_note textarea {
			font-size: 28px;
			padding: 0;
			min-height: 40px;
			flex: 1;
			line-height: 40px;
			border: none;
		}
		.pay_font{
			margin-top: 5px;
			font-size: 26px;
			color: #2c2c2c;
		}
		.pay_f{
			margin: 5px 19px 0px 5px;
			font-size: 26px;
			color: #FF7C12;
		}
		.pay_y{
			margin-left: 5px;
			font-size: 40px;
			color: #2C2C2C;
		}
		.pay_bottom{
			margin-bottom: 137px;
		}
		.pay_footer{
			position: fixed;
			bottom: 0;
			left: 0;
			width: 100%;
			height: 100px;
			line-height: 100px;
			text-align: right;
			background: #FFFFFF;
		}
		.pay_font_a{
			font-size: 28px;
			color: #2c2c2c;
		}
		.pay_f_a{
			margin-top: 5px;
			font-size: 26px;
			color: #FF7C12;
		}
		.pay_y_a{
			margin-right: 31px;
			font-size: 40px;
			color: #FF6612;
		}
		.pay_btn{
			float: right;
			width: 244px;
			height: 100px;
			line-height: 100px;
			text-align: center;
			background: #FF6A29;
			font-size: 35px;
			color: #FFFFFF;
		}
		/*脉粒抵扣*/
		.choose_box{
			position: fixed;
		    z-index: 5000;
		    bottom: 0px;
		    left: 0;
		    padding-top: 24px;
		    width: 100%;
		    background-color: #FFFFFF;
		}
		.pay_bounced_tit{
			margin-top: 6px;
			margin-bottom: 30px;
			text-align: center;
			font-size: 35px;
		}
		.pay_boun_box{
			margin-top: 24px;
			padding: 24px 24px;
        	display: flex;
        	justify-content: space-between;
		}
		.stat_inf_box{
        	width: 90%;
        	margin-left: 12px;	
        }
        .comm_ustit{
        	font-size: 32px;
        	color: #2C2C2C;
        	height: 36px;
        	line-height: 36px;	
        	overflow: hidden;
			text-overflow:ellipsis;
			white-space: nowrap;
        }
        .status{
        	float: right;
        	font-size: 30px;
        	color: #6AC46E;
        }
        .stat_orage{
        	color: #ff6612;
        }
        .spe_bottom{
			margin-top: 64px;
			display: flex;
			justify-content: space-between;
		}
		.spe_btn{
			width: 100%;
			height: 99px;
			line-height: 99px;
			text-align: center;
			background: #FF6A29;
			font-size: 42px;
			color: #FFFFFF;
		}
		.opacitys{
    		opacity: .5;
    	}
    </style>
</head>
<body>
	<div id='container'></div>
    <div id="app">
        <div class="page" v-cloak>
            <div class="wrapper">
                <main class="content">
                    <!--订单 top-->
                    <div class="dist_way">
                    	<div>选择配送方式：</div>
                    	<div @click="changeTab(1)">快递/外送<input name="checkbox" value="" type="checkbox" class="tui-checkbox" :class="{checked: deliveryType == 1}"></div>
                    	<div @click="changeTab(3)">自提<input name="checkbox" value="" type="checkbox" class="tui-checkbox" :class="{checked: deliveryType == 3}"></div>
					</div>
					<template v-if="deliveryType == 1">
						<div class="detail_address" v-if="Object.keys(userAddr).length == 0" @click="toPage('/mall/address')">
							<img class="address_img" src="/images/pay_address.png">
							<div class="detail_info addr_null">请填写收货地址</div>
							<img class="comm_regu" src="/images/arrows.png">
						</div>
						<div class="detail_address" v-else @click="toPage('/mall/address?id=' + userAddr.id )">
							<img class="address_img" src="/images/pay_address.png">
							<div class="detail_info" style="display: block;">
								<p class="detail_name">{{userAddr.receiver}}<span class="detail_name">{{userAddr.mobile}}</span></p>
								<p class="detail_addr">{{userAddr.province}}{{userAddr.city}}{{userAddr.area}}{{userAddr.address}}</p>  
							</div>
						</div>
					</template>
					
					<template v-if="deliveryType == 3">
						<div class="create_category" @click="toPage('/mall/extractPhone')">
							<template v-if="extractPhone == ''">
								<div class="category">请填写自提人电话</div>
							</template>
							<template v-if="extractPhone != ''">
								<div class="category">自提人电话：{{extractPhone}}</div>
							</template>
							<div class="category_img"><img src="/images/arrows.png"></div>
						</div>
						<div class="detail_address" @click="toPage('/mall/extract?shelfId=' + shelfId + '&id=' + extractDetail.id + '&type=1')">
							<div class="detail_info2">
								<p class="pay_addr"><span>自提地址：</span>{{extractDetail.province}}{{extractDetail.city}}{{extractDetail.area}}{{extractDetail.address}}</p>
								<div class="pay_tel">
									<span>联系电话:{{extractDetail.telephone}}</span>
									<span class="ext_n">距您 {{(extractDetail.distance / 1000).toFixed(1)}}km</span>
								</div>
							</div>
							<div class="pay_addr_num" v-if="extractNum > 1">{{extractNum}}个可选</div>
							<img class="comm_regu" src="/images/arrows.png">
						</div>
					</template>
                    
                    <!--a list-->
                    <template v-for="(item, index) in information.cartSellerDtoList" :key="index">
                        <div class="comm_box">
                            <div class="order_top">
                                <div class="order_shoptit"><img class="oreder_icon" src="/images/shop_order.png">{{item.shelfName}}</div>
                            </div>
                            <template v-for="(citem, cindex) in item.cartGoodsDtoList" :key="cindex">
                                <div class="comm_inf">
                                    <img class="pay_pic" :src="citem.goodsPic + '!/both/96x96'" />
                                    <div class="pay_inf_box">
                                        <div class="order_box">
                                            <div class="comm_tit">{{citem.goodsName}}</div>
                                            <div class="comm_num"><span>￥</span>{{citem.goodsPrice}}</div>
                                        </div>
                                        <div class="comm_num2">
											<div class="comm_num_box">{{citem.goodsAttr}} x {{citem.goodsCount}}</div>
											<div class="pay_dedu" v-if="!citem.isDiscount" @click="changeMaiLi(citem, cindex, item, index)">脉粒抵扣：<span v-if="!citem.isDiscount">不使用</span>
                                                <img src="/images/arrows.png">
											</div>
                                            <div class="pay_dedu" v-if="citem.isDiscount" @click="changeMaiLi(citem, cindex, item, index)">使用脉粒抵扣：<span v-if="citem.isDiscount" class="pay_orage">- ¥ {{citem.maiLiCount}}</span>
                                                <img src="/images/arrows.png">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </template>
						</div>
						<div class="comm_box">
							<div class="detail_price">
								<span>配送费：</span>
								<div class="money"><span>¥ </span>{{deliveryType == 1 && item.deliveryFee || deliveryType == 3 && "0"}}</div>
							</div>
						</div>
						<div class="create_category"  @click="toPage('/mall/invoice/' + item.isInvoice)">
                            <div class="category">是否开发票</div>
                            <div class="category_tit" v-if="item.invoiceId == 0">不开发票</div>
                            <div class="category_tit" v-if="item.invoiceId == 1">{{invoiceTitle}}</div>
                            <div class="category_img"><img src="/images/arrows.png"></div>
                        </div>
                        <div class="comm_box">
                            <div class="pay_note">订单备注：<textarea v-model="remarks" auto-height placeholder="请输入订单备注"></textarea></div>
                        </div>
                        <div class="comm_box pay_bottom">
                            <div class="detail_price2">
								<template v-if="item.useMemberScore > 0">
									<span class="pay_font">使用脉粒抵扣</span>
									<span class="pay_f">- ¥ {{item.useMemberScore}}</span>
								</template>
                                <span class="pay_font">小计 ¥ </span>
                                <span class="pay_y">{{item.actualTotal}}</span>
                            </div>
                        </div>
                    </template>
					<div class="pay_footer">
						<span class="pay_font_a">共{{information.allGoodsCount}}件，合计</span>
						<span class="pay_f_a">¥</span>
						<span class="pay_y_a">{{information.actualTotal}}</span>
						<div class="pay_btn" @click="orderSubmit">提交订单</div>
					</div>
                </main>
            </div>
		</div>
		<!--脉粒抵扣下拉弹框-->
		<template v-if="isShowMaiLiDialog">
			<div class="js_dialog">
				<div class="weui-mask"></div>
				<div class="choose_box">
                    <div class="pay_bounced_tit ">脉粒抵扣</div>
                    <template v-if="Number(goodsDetail.citem.maiLiCount) <= Number(this.memberScore)">
                        <div class="pay_boun_box" @click="changeDiscount(true)">
                            <div class="stat_inf_box">
                                <p class="comm_ustit">使用脉粒抵扣<span class="status stat_orage">- ¥ {{goodsDetail.citem.maiLiCount}}</span></p>
                            </div>
                            <input type="checkbox" class="tui-checkbox" :class="{checked: goodsDetail.isDiscount}">
                        </div>
                    </template>
                    <template v-else>
                        <div class="pay_boun_box opacitys">
                            <div class="stat_inf_box">
                                <p class="comm_ustit">使用脉粒抵扣<span class="status stat_orage">- ¥ {{goodsDetail.citem.maiLiCount}}</span></p>
                            </div>
                            <input type="checkbox" disabled class="tui-checkbox">
                        </div>
                    </template>
					<div class="pay_boun_box" @click="changeDiscount(false)">
						<div class="stat_inf_box">
							<p class="comm_ustit">不使用</p>
						</div>
						<input name="checkbox" type="checkbox" class="tui-checkbox" :class="{checked: !goodsDetail.isDiscount}">
					</div>
					<div class="spe_bottom">
						<div class="spe_btn" @click="editDiscount">完成</div>
					</div>
				</div>
			</div>
        </template>
		
    </div>
	
    <script src="/javascripts/vue.min.js"></script>
    <script src="/javascripts/webcommon.js"></script>
	<script src="/javascripts/axios.min.js"></script>
	<script src="https://webapi.amap.com/maps?v=1.4.14&key=afb988cf75aad978ec269d82f922ddee"></script>
    <script>
		window.addEventListener('pageshow', function(e) {
            if (e.persisted) {
                window.location.reload();
            }
        });
        new Vue({
            el: "#app",
            data() {
                return {
					information: JSON.parse(`<%- information %>`),
					shelfId: `<%- shelfId %>`,
					userAddr: {},
					extractDetail: {},
					extractNum: 0,
					deliveryType: 1,
					remarks: "",
                    memberScore: 0,
                    useMemberScore: 0,
					isShowMaiLiDialog: false,
					isShowInvoiceDialog: false,
					goodsDetail: {},
					invoiceDetail: {},
					isInvoice: 0,
					invoiceId: "",
					invoiceTitle: "开发票",
					extractPhone: ""
                }
            },
            created() {
				console.log(this.information);
				this.shopId = this.information.shopId;
				this.information.cartSellerDtoList.forEach(value => {
                    value.cartGoodsDtoList.forEach(element => {
                        element.isDiscount = false;
                    });
                    value.remarks = "";
                    value.useMemberScore = 0;
                    value.invoiceId = 0;
                });
				this.shelfId = this.information.cartSellerDtoList[0].shelfId;
				if(this.information.deliveryType.split(",")[1] == "3") {
					this.isExtract = true;	
				}
				if(sessionStorage.getItem("information")) {
					this.information = JSON.parse(sessionStorage.getItem("information"));
				}
				if(sessionStorage.getItem("userAddr")) {
					this.userAddr = JSON.parse(sessionStorage.getItem("userAddr"));
				}else {
					this.userAddr = this.information.userAddr;
				}
				if(sessionStorage.getItem("extractDetail")) {
					this.extractDetail =JSON.parse(sessionStorage.getItem("extractDetail"));
				}else {
					this.getLocation();
                }
				if(sessionStorage.getItem("extractPhone")) {
					this.extractPhone = sessionStorage.getItem("extractPhone");
				}
				if(sessionStorage.getItem("remarks")) {
					this.remarks = sessionStorage.getItem("remarks");
				}
				if(sessionStorage.getItem("deliveryType")) {
					this.deliveryType = sessionStorage.getItem("deliveryType");
				}
				if(sessionStorage.getItem("invoiceId")) {
					this.invoiceId = sessionStorage.getItem("invoiceId");
					if(this.invoiceId ) {
						this.isInvoice = 1;
						this.invoiceTitle = sessionStorage.getItem("invoiceTitle");
					}else {
						this.isInvoice = 0;
					}
				}
				// 获取用户脉粒
				this.getMemberScore();
			},
			methods: {
				// 初始化数据
                initData() {
                    axios.get("/mall/getShopInfo?shopId=" + this.shopId).then(res => {
                        console.log(res);
                        let data = res.data.data;
                        this.information = data;
                        document.title = data.shopName;
                        this.shelfModelList = data.shelfModelWithGoods.shelfModelList;
                        this.shelfModelList.forEach(element => {
                            element.shopGoodsVoList = [];
                        });
                        this.shelfModelList[0].shopGoodsVoList = data.shelfModelWithGoods.shopGoodsVoList;
                        this.goodsList = this.shelfModelList[0].shopGoodsVoList;
                        this.getShelfDetail(data.id);
                    });
				},
				// 获取用户脉粒数
				getMemberScore() {
					axios.get("/mall/getMemberScore").then(res => {
						this.memberScore = res.data.data.memberScore;
					});
				},

				// 弹出脉粒选择弹窗
                changeMaiLi(citem, cindex, item, index) {
                    let goodsDetail = {
                        citem: citem,
                        cindex: cindex,
                        index: index
                    };
					goodsDetail.isDiscount = false;
					this.goodsDetail = goodsDetail;
                    this.isShowMaiLiDialog = true;
                },
				// 获取定位
				getLocation() {
					var map = new AMap.Map('container', {
					resizeEnable: true
					});
					AMap.plugin('AMap.Geolocation', ()=> {
						var geolocation = new AMap.Geolocation({
							enableHighAccuracy: true,//是否使用高精度定位，默认:true
							timeout: 500,          //超过10秒后停止定位，默认：5s
							buttonPosition:'RB',    //定位按钮的停靠位置
							buttonOffset: new AMap.Pixel(10, 20),//定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
							zoomToAccuracy: true,   //定位成功后是否自动调整地图视野到定位点
						});
						map.addControl(geolocation);
						geolocation.getCurrentPosition((status,result)=>{
							if(status=='complete'){
								this.getExtract(result.position.lat, result.position.lng);
							}else{
								this.getExtract("", "");
							}
						});
					});
				},
				// 切换是否使用脉粒
                changeDiscount(type) {
                    this.goodsDetail.isDiscount = type;
                },
                // 选择折扣
                editDiscount() {
                    let cartSellerDto = this.information.cartSellerDtoList[this.goodsDetail.index];
                    let cartGoods = this.information.cartSellerDtoList[this.goodsDetail.index].cartGoodsDtoList[this.goodsDetail.cindex];
                    // 判断商品是选中的，弹窗是未选中的
                    if(cartGoods.isDiscount == true && this.goodsDetail.isDiscount == false) {
                        cartSellerDto.useMemberScore = cartSellerDto.useMemberScore - this.goodsDetail.citem.maiLiCount;
                        cartSellerDto.actualTotal = cartSellerDto.actualTotal + this.goodsDetail.citem.maiLiCount;
                        this.information.actualTotal = this.information.actualTotal + this.goodsDetail.citem.maiLiCount;
                        cartGoods.isDiscount = false;
                    }
                    // 判断商品是未选中的，弹窗是选中的
                    if(cartGoods.isDiscount == false && this.goodsDetail.isDiscount == true) {
                        cartGoods.isDiscount = true;
                        cartSellerDto.useMemberScore = cartSellerDto.useMemberScore + this.goodsDetail.citem.maiLiCount;
                        cartSellerDto.actualTotal = cartSellerDto.actualTotal - this.goodsDetail.citem.maiLiCount;
                        this.information.actualTotal = this.information.actualTotal - this.goodsDetail.citem.maiLiCount;
                    }
                    this.isShowMaiLiDialog = false;
                },
				// 获取自提地址
				getExtract(nowLat, nowLng) {
					axios.get("/mall/getExtract?shelfId=" + this.shelfId + "&nowLat="+ nowLat +"&nowLng=" +nowLng).then(res => {
						let list = res.data.data.list;
						let min = list[0];
						for(let i = 0; i<list.length; i++) {
							if(min.distance > list[i].distance) {
								min = list[i];
							}
						}
						this.extractDetail = min;
						this.extractNum = res.data.data.total;
					});
				},
				changeTab(e) {
					if(e == this.deliveryType) {return};
					this.deliveryType = e;
				},
				// 展开/关闭选择发票弹窗
                changeInvoice(item, index) {
                    sessionStorage.setItem("remarks", this.remarks);
					window.location.href = "/mall/invoice/" + item.isInvoice;
				},
				toggleInvoice(type) {
                    this.invoiceDetail.invoiceId = type;
                },

                editInvoice() {
                    this.information.cartSellerDtoList[this.invoiceDetail.index].invoiceId = this.invoiceDetail.invoiceId;
                    this.isShowInvoiceDialog = false;
				},
				// 跳转页面
				toPage(page) {
					sessionStorage.setItem("remarks", this.remarks);
					sessionStorage.setItem("deliveryType", this.deliveryType);
					sessionStorage.setItem("information", JSON.stringify(this.information));
					window.location.href = page;
				},
				// 提交订单
				orderSubmit() {
					// 自提
					let config = {
						shopId: this.shopId,
						isBuyNow: 0,
						deliveryType: this.deliveryType,
					}
					// 快递/外送
					if(this.deliveryType == 1) {
						if(!this.userAddr) {
							return poper("请选择收货地址");
						}
						config.addressId = this.userAddr.id;
					}
					// 自提
					if(this.deliveryType == 3) {
						if (!this.extractDetail) {
							return poper("请选择自提地址");
						}else {
							config.addressId = this.extractDetail.id;
						}
						if (!this.extractPhone) {
							return poper("请填写自提人电话");
						}else {
							config.pickUserPhone = this.extractPhone;
						}
					}
					let orderSubmitSellerParamList = [];
					this.information.cartSellerDtoList.forEach(value => {
						let orderSubmitGoodsParamList = [];
						value.cartGoodsDtoList.forEach(element => {
                            if(element.isDiscount == true) {
                                orderSubmitGoodsParamList.push({
                                    skuCode: element.skuCode,
                                    goodsCount: element.goodsCount,
                                    goodsPrice: element.goodsPrice,
                                    maiLiCount: element.maiLiCount,
                                });
                            }else {
                                orderSubmitGoodsParamList.push({
                                    skuCode: element.skuCode,
                                    goodsCount: element.goodsCount,
                                    goodsPrice: element.goodsPrice,
                                    maiLiCount: 0,
                                });
                            }
						});
						orderSubmitSellerParamList.push({
							shelfId: value.shelfId,
							invoiceId: "",
							remarks: this.remarks,
							orderSubmitGoodsParamList: orderSubmitGoodsParamList
						});
					});
					config.orderSubmitSellerParamList = orderSubmitSellerParamList;
					let opt = {
						method: "POST",
						url: "/mall/orderSubmit",
						data: config,
						headers:{
                            'Content-Type': 'application/json',
                        }
					}
					axios(opt).then(res => {
						if (res.data.errorCode == 0) {
							window.location.replace(`/mall/pay?orderCode=${res.data.data}&shopId=${this.shopId}`);
						}else {
							return poper(res.data.message);
						}
					});
				}
			}
        })
    </script>
</body>
</html>